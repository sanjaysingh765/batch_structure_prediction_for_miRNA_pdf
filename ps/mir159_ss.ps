%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.5
%%CreationDate: Thu Jun  9 09:57:25 2016
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGUGGAGCUCCUUGAAGUCCAAAAGAGGAUUCAUAAUUUGGGCAGAUCGAGCUGCUGAGAUAUGGAUCCCUCAGCUCUAUCCCUUACUAAGACAAAAUUUUGGAUAGGUUGUGGCUUGCAUAUAUCAGGAGCCUGCAUUUCCCAAGUUGGAUUCUUUUUUGGAUUGAAGGGAGCUCUACA\
) def
/coor [
[76.50439453 836.55725098]
[82.55073547 820.71813965]
[82.55073547 805.71813965]
[82.55073547 790.71813965]
[82.55073547 775.71813965]
[82.55073547 760.71813965]
[82.55073547 745.71813965]
[82.55073547 730.71813965]
[82.55073547 715.71813965]
[82.55073547 700.71813965]
[82.55073547 685.71813965]
[82.55073547 670.71813965]
[82.55073547 655.71813965]
[71.86986542 645.40045166]
[71.65618134 630.18829346]
[82.55073547 619.05517578]
[82.55073547 604.05517578]
[82.55073547 589.05517578]
[82.55073547 574.05517578]
[82.55073547 559.05517578]
[82.55073547 544.05517578]
[82.55073547 529.05517578]
[82.55073547 514.05517578]
[82.55073547 499.05520630]
[82.55073547 484.05520630]
[82.55073547 469.05520630]
[82.55073547 454.05520630]
[82.55073547 439.05520630]
[82.55073547 424.05520630]
[82.55073547 409.05520630]
[82.55073547 394.05520630]
[82.55073547 379.05520630]
[82.55073547 364.05520630]
[79.84766388 360.08816528]
[79.62628937 354.37545776]
[82.82011414 348.53686523]
[83.34071350 333.54589844]
[83.86131287 318.55493164]
[84.38191986 303.56396484]
[84.90251923 288.57299805]
[85.42311859 273.58203125]
[85.94371796 258.59106445]
[83.02569580 251.77873230]
[86.60569000 243.34509277]
[87.38639832 228.36541748]
[88.16710663 213.38574219]
[88.94780731 198.40608215]
[89.59848785 183.42019653]
[90.11908722 168.42922974]
[82.82817078 155.44110107]
[91.03977203 141.91777039]
[91.56037140 126.92681122]
[92.08097076 111.93584442]
[85.68468475 99.50286102]
[92.92806244 87.54354858]
[93.44866180 72.55258942]
[93.96926880 57.56162643]
[94.48986816 42.57066345]
[87.23618317 28.51026726]
[95.41054535 16.05920029]
[95.93115234 1.06823719]
[96.45175171 -13.92272568]
[96.97235107 -28.91368866]
[97.49295044 -43.90465164]
[90.23927307 -57.96504593]
[98.41363525 -70.41611481]
[87.91204071 -81.92064667]
[88.65355682 -97.11619568]
[99.68608856 -107.05696869]
[100.20668793 -122.04792786]
[92.95301056 -136.10832214]
[101.12737274 -148.55938721]
[101.64797211 -163.55035400]
[102.16857147 -178.54132080]
[102.68917084 -193.53228760]
[99.85364532 -202.24449158]
[103.35114288 -208.77825928]
[104.13185120 -223.75793457]
[104.91255951 -238.73760986]
[105.69326782 -253.71726990]
[106.47396851 -268.69692993]
[107.25467682 -283.67660522]
[93.05634308 -288.86300659]
[81.01852417 -298.00534058]
[72.21161652 -310.29071045]
[67.41872406 -324.62664795]
[67.06602478 -339.73846436]
[71.18488312 -354.28240967]
[79.40905762 -366.96524048]
[91.00724792 -376.65924072]
[104.94816589 -382.50238037]
[119.99217987 -383.97512817]
[134.80160522 -380.94647217]
[148.05957031 -373.68579102]
[158.58721924 -362.83868408]
[165.44841003 -349.36962891]
[168.03306580 -334.47628784]
[166.11135864 -319.48300171]
[159.85417175 -305.72296143]
[149.81787109 -294.41967773]
[136.89489746 -286.57824707]
[122.23434448 -282.89590454]
[121.45363617 -267.91622925]
[120.67293549 -252.93656921]
[119.89222717 -237.95689392]
[119.11151886 -222.97723389]
[118.33081818 -207.99755859]
[117.68013763 -193.01167297]
[117.15953827 -178.02072144]
[116.63893127 -163.02975464]
[116.11833191 -148.03878784]
[123.40924835 -135.05064392]
[115.19765472 -121.52732849]
[114.67704773 -106.53636169]
[124.99339294 -95.85420227]
[124.67898560 -80.64381409]
[113.40460205 -69.89551544]
[120.69551849 -56.90737152]
[112.48391724 -43.38405228]
[111.96331787 -28.39308739]
[111.44271088 -13.40212440]
[110.92211151 1.58883858]
[110.40151215 16.57980156]
[117.69242859 29.56794167]
[109.48082733 43.09126282]
[108.96022797 58.08222580]
[108.43962860 73.07318878]
[107.91902924 88.06415558]
[114.31531525 100.49713898]
[107.07193756 112.45645142]
[106.55133820 127.44741058]
[106.03073120 142.43836975]
[113.28441620 156.49876404]
[105.11005402 168.94982910]
[104.58945465 183.94079590]
[107.42498016 192.65301514]
[103.92748260 199.18678284]
[103.14677429 214.16645813]
[102.36606598 229.14611816]
[101.58536530 244.12579346]
[100.93468475 259.11166382]
[100.41408539 274.10263062]
[99.89347839 289.09359741]
[99.37287903 304.08456421]
[98.85227966 319.07553101]
[98.33168030 334.06649780]
[97.81107330 349.05746460]
[97.55073547 364.05520630]
[97.55073547 379.05520630]
[97.55073547 394.05520630]
[97.55073547 409.05520630]
[97.55073547 424.05520630]
[97.55073547 439.05520630]
[97.55073547 454.05520630]
[97.55073547 469.05520630]
[97.55073547 484.05520630]
[97.55073547 499.05520630]
[97.55073547 514.05517578]
[97.55073547 529.05517578]
[97.55073547 544.05517578]
[97.55073547 559.05517578]
[97.55073547 574.05517578]
[97.55073547 589.05517578]
[97.55073547 604.05517578]
[97.55073547 619.05517578]
[108.44528961 630.18829346]
[108.23160553 645.40045166]
[97.55073547 655.71813965]
[97.55073547 670.71813965]
[97.55073547 685.71813965]
[97.55073547 700.71813965]
[97.55073547 715.71813965]
[97.55073547 730.71813965]
[97.55073547 745.71813965]
[97.55073547 760.71813965]
[97.55073547 775.71813965]
[97.55073547 790.71813965]
[97.55073547 805.71813965]
[97.55073547 820.71813965]
[103.59707642 836.55725098]
] def
/pairs [
[2 179]
[3 178]
[4 177]
[5 176]
[6 175]
[7 174]
[8 173]
[9 172]
[10 171]
[11 170]
[12 169]
[13 168]
[16 165]
[17 164]
[18 163]
[19 162]
[20 161]
[21 160]
[22 159]
[23 158]
[24 157]
[25 156]
[26 155]
[27 154]
[28 153]
[29 152]
[30 151]
[31 150]
[32 149]
[33 148]
[36 147]
[37 146]
[38 145]
[39 144]
[40 143]
[41 142]
[42 141]
[44 140]
[45 139]
[46 138]
[47 137]
[48 135]
[49 134]
[51 132]
[52 131]
[53 130]
[55 128]
[56 127]
[57 126]
[58 125]
[60 123]
[61 122]
[62 121]
[63 120]
[64 119]
[66 117]
[69 114]
[70 113]
[72 111]
[73 110]
[74 109]
[75 108]
[77 107]
[78 106]
[79 105]
[80 104]
[81 103]
[82 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
